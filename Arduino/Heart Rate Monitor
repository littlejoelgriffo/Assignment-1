#include <Adafruit_GFX.h>
#include <Adafruit_SPITFT.h>
#include <Adafruit_SPITFT_Macros.h>
#include <gfxfont.h>

//Global Variables for moving max:
const int howmany=100;
int analogValues[howmany];
int ir = 0;
int maxA0 = 0;
int threshold = 0;

//Global variables for moving max ^^
    
//Global Variables for moving average ECG:
//*************************************
//****Important Variable to play with:
const int no_averages = 2;

//**************************************
unsigned long time = 0, peak1 = 0, peak2 = 0;
int binaryrange, bpm, i = 0;   //not sure what i does tbh
int readings[no_averages];      // the readings from the analog input
int readIndex = 0;              // the index of the current reading
int total = 0;                  // the running total
int average = 0, averageVolts=0;                // the average which we will display as ECG
void setup()
{
    
// initialize serial communication with computer:
        Serial.begin(115200);
    
// initialize all the readings to 0:
        for (int thisReading = 0; thisReading < no_averages; thisReading++) {
        readings[thisReading] = 0;
    } 
//set moving max shit to zero
        for (int is = 0; is < howmany; is++) {
        analogValues[is] = 0;
} } void loop()
{

    
        //int maxA0=0; //Whether I intitate the variables here or globally, same error
        //int threshold = 0;
        time = millis();
    
//*************************************************
//***Moving Average ECG code & Serial Print the average
//*************************************************
        average = 0;
    readings[readIndex] = analogRead(A0);
    readIndex++;
    for (int ir = 0; ir < no_averages; ir++) {
        average = average + readings[ir];
    } if (readIndex >= no_averages) { // ...wrap around to the beginning of array if it has hit the end:
        readIndex = 0;
    }
    average = average / no_averages;
    if (average > 1000) {
        average = 600;
    }

    averageVolts = (5/1023) *average;
    Serial.print(average);
    
//*************************************************
//***To Determine Bpm threshold
//*************************************************
    analogValues[ir] = average;
    ir++;
    if (ir >= howmany) {
        ir = 0;
        maxA0=0;
    }                           //This is to roll back to the start of the array if it surpasses the last array spot
    for (int is = 0; is < howmany; is++) {
        if (analogValues[is] > maxA0) {
            maxA0 = analogValues[is];
    }
    }
    

        threshold = maxA0 - 100;
    
//***************
//***BPM Code:
//***************
//threshold=455; //if shit goes wrong with bpm, activate and play with value
        if (average < threshold) {
        binaryrange = 0;
    }
    if (average > threshold && binaryrange == 0) {
        peak1 = peak2;
        peak2 = time;
        bpm = 60000 / (peak2 - peak1);
        binaryrange = 1;
    }
    if (time>110) {
    Serial.print(" ");
    Serial.println(bpm);
    }
    
//BPM code ^^
        delay(8);             // delay in between reads for stability
    i++;
}
