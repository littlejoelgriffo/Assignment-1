clc;
close all;
clear all;
%**************
%Task 1
%**************
% f=2;
% k=-1; 
% t = linspace(0,5,1000); %This creates a double array which begins at 0, ends at 5 and has a total of 1000 equidistant values.
% y = (2.7^k .*t).*sin(2*pi*f .*t); %This is the formula to calculate the voltage over time
% %y becomes an array with 100 values, a different one for each t value
% 
% plot (t,y)
% xlabel('Time(s)')
% ylabel('Voltage(V)')
% title('Damped Decay')
%**************
%Task 2
%**************
i1 = double(imread("IMG_5704.JPG"));
i2 = double(imread("IMG_5703.JPG"));
i3 = double(imread("IMG_5702.JPG"));
i4 = double(imread("IMG_5701.JPG"));
i5 = double(imread("IMG_5700.JPG"));
i6 = double(imread("IMG_5699.JPG"));
i7 = double(imread("IMG_5698.JPG"));
dark = double(imread("dark.png"));

i1 = double(imread("IMG_5704.JPG"));
i2 = double(imread("IMG_5703.JPG"));
i3 = double(imread("IMG_5702.JPG"));
i4 = double(imread("IMG_5701.JPG"));
i5 = double(imread("IMG_5700.JPG"));
i6 = double(imread("IMG_5699.JPG"));
i7 = double(imread("IMG_5698.JPG"));

y = 1:427;
x= 1:640;
r=1;
g=2;
b=3;
meani=i1;
meani(y,x,r)=(i1(y,x,r)+i2(y,x,r)+i3(y,x,r)+i4(y,x,r)+i5(y,x,r)+i6(y,x,r)+i7(y,x,r))/7;
meani(y,x,g)=(i1(y,x,g)+i2(y,x,g)+i3(y,x,g)+i4(y,x,g)+i5(y,x,g)+i6(y,x,g)+i7(y,x,g))/7;
meani(y,x,b)=(i1(y,x,b)+i2(y,x,b)+i3(y,x,b)+i4(y,x,b)+i5(y,x,b)+i6(y,x,b)+i7(y,x,b))/7;

meani(y,x,r)=meani(y,x,r)-dark(y,x,r);
meani(y,x,g)=meani(y,x,g)-dark(y,x,g);
meani(y,x,b)=meani(y,x,b)-dark(y,x,b);

meani(meani<30) = 0;
figure(1)
image(uint8(meani))

%s = size(meani);
for y = 1:427;
  for x= 1:640;
      if (x>1 && y>1 && x<639 && y<427)
        blurred(y,x,r) = (meani(y-1,x,r) + meani(y+1,x,r) + meani(y,x-1,r) + meani(y,x+1,r) + meani(y,x,r))/5;
        blurred(y,x,g) = (meani(y-1,x,g) + meani(y+1,x,g) + meani(y,x-1,g) + meani(y,x+1,g) + meani(y,x,g))/5;
        blurred(y,x,b) = (meani(y-1,x,b) + meani(y+1,x,b) + meani(y,x-1,b) + meani(y,x+1,b) + meani(y,x,b))/5;
      else  blurred(y,x,g) = meani(y,x,g);
      end
      
  end
end
%blurred = imgaussfilt(meani,0.5)

y = (meani- blurred)*10;

output = y + meani;

i1 = uint8(i1);
meani = uint8(meani);
blurred = uint8(blurred);
output = uint8(output);


figure(2)
image(output)




