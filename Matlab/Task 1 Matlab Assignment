clc;
close all;
clear all;
T1=imread("T1.png");
% imshow(T1);
binaryswitch=0;
area=0;
FOVd=63.5; %change this number (degrees) for the Field of view of the sensor
FOV=FOVd*(pi/180); %gives FOV in radians
d0=1000; %Setting the distance
size=size(T1);
maxT1=max(T1)
 for y=1:size(1)
for x=1:size(2)
   
        if T1(y,x)==255 && binaryswitch==0
            firstspot(1)=x;
            firstspot(2)=y;
            binaryswitch=1;
        end
    end
 end
 
for y=1:size(1)
for x=1:size(2)
   
        if T1(y,x)==255
            sndspot(1)=x;
            sndspot(2)=y;
            area=area+1;
        end
    end
 end

% firstspot
% sndspot

centre(1)= (sndspot(1)+firstspot(1))/2;
centre(2)= (sndspot(2)+firstspot(2))/2;
% centre
radiuspx=centre(2)-firstspot(2)+0.5;

% area=pi*radius^(2) 
%^ depends on what definition of area we need, probably leave deactivated

%******************************
%Task 4:
%******************************
%Diagonal of sensor:
lilDIboi=(4.6^2 + 3.7^2)^0.5;
%Distance from centre of circle to top edge of sensor:
liltopEdge=centre(2)*(3.7/size(1)); %gives answer in mm
lilleftEdge=centre(1)*(4.6/size(2)); %gives answer in mm
%Diagonal of total viewable area (at a distance):
bigDIboi=2*d0*tan(FOV/2);

%Ratio of diagonal of sensor viewable area/diagonal of sensor:
ratio=bigDIboi/lilDIboi;

%Distance from centre of circle to edge of sensor viewable area:
bigtopEdge=liltopEdge*ratio;
bigleftEdge=lilleftEdge*ratio;

%Radius of circle on sensor in mm: (note that there are 2 values as the
%pixels are not squares.
lilradiush=radiuspx*(3.7/size(1));
lilradiusw=radiuspx*(4.6/size(2));
%Radius of circle in real life (again two values as we do not know whether
%the object is a circle in real life or an oval
bigradiush=lilradiush*ratio;
bigradiusw=lilradiusw*ratio;

%Area of one pixel (sensor) in mm
lilarea1px=(3.7/size(1))*(4.6/size(2));
%Area of one pixel real life in mm:
bigarea1px=lilarea1px*ratio;
%Area of circle in real life:
area_at_distance=area*bigarea1px;



%Answers below:
centre
radiuspx
area
bigtopEdge
bigleftEdge
bigradiush
bigradiusw
area_at_distance
ratio
