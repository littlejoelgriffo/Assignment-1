clc;
clear all;
T1=imread("T1.png");
binaryswitch=0;
areapx=0;
FOVd=100; %change this number (degrees) for the Field of view of the sensor
FOV=FOVd*(pi/180); %gives FOV in radians
d0=1000; %Setting the distance
size=size(T1);
sensorw=4.93; %in millimetres
sensorh=3.7; %in millimetres

%Determine the size of a pixel on the sensor:
pixelh=sensorh/size(1); %finds the height of a pixel
pixelw=sensorw/size(2); %finds the width of a pixel
pxside=(pixelh+pixelw)/2; %as we can assume pixels are square, we take the average of height+width

for y=1:size(1)
    for x=1:size(2)
        
        if T1(y,x)==255 && binaryswitch==0
            firstspot(1)=x;
            firstspot(2)=y;
            binaryswitch=1;
        end
    end
end

for y=1:size(1)
    for x=1:size(2)
        
        if T1(y,x)==255
            lastpot(1)=x;
            lastpot(2)=y;
            areapx=areapx+1;
        end
    end
end

centre(1)= (lastpot(1)+firstspot(1))/2;
centre(2)= (lastpot(2)+firstspot(2))/2;

radiuspx=centre(2)-firstspot(2)+0.5;

% area=pi*radius^(2)
%^ depends on what definition of area we need, probably leave deactivated

%******************************
%Part 4:
%******************************
%Diagonal of sensor:
lilDIboi=sqrt(sensorw^2 + sensorh^2);

%Diagonal of total viewable area (at a distance):
bigDIboi=2*d0*tan(FOV/2);

%Ratio of diagonal of sensor viewable area/diagonal of sensor:
ratio=bigDIboi/lilDIboi;

%Radius of circle on sensor in mm:
lilradius=radiuspx*pxside;
%Radius of circle in real life 
bigradius=(lilradius*ratio)/1000; %gives answer in m;

%*******************************************************
%Code for determining distance from centre of circle to top left corner of
%viewing area rectangle. (in metres)
topleft2centrecircle=sqrt(2*(pxside*(centre(1)-0.5)*ratio)^2)/1000;
%we take 0.5 off the centre to find the centre of the pixel rather than the
%bottom right corner, which would give a slighter larger i(incorrect)
%answer


%Area of one pixel (sensor) in mm
lilarea1px=pxside^2;
%Area of one pixel real life in mm:
bigpxside=pxside*ratio;
bigarea1px=lilarea1px*ratio^2;
%Area of circle in real life:
area_at_distance=(areapx*bigarea1px)/1000000; %gives answer in m^2



%Answers below:
centre
radiuspx
areapx
topleft2centrecircle
bigradius
area_at_distance


%code that i've had to change due to assignment pdf changing:
% FOVd=63.5;
%Radius of circle on sensor in mm:
% lilradiush=radiuspx*(sensorh/size(1));
% lilradiusw=radiuspx*(sensorw/size(2));
% liltopEdge=centre(2)*(sensorh/size(1)); %gives answer in mm
% lilleftEdge=centre(1)*(sensorw/size(2)); %gives answer in mm
% bigtopEdge=liltopEdge*ratio;
% bigleftEdge=lilleftEdge*ratio;



